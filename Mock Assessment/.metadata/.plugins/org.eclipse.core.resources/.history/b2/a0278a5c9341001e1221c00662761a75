package com.restaurant.service;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Component;

import com.restaurant.exception.BookTableInvalidException;
import com.restaurant.model.BookTable;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
public class RestaurantServiceImpl implements IRestaurantService {

	private static List<BookTable> bookList = new ArrayList<BookTable>();

	public static List<BookTable> getBookList() {
		return bookList;
	}

	public static void setBookList(List<BookTable> bookList) {
		RestaurantServiceImpl.bookList = bookList;
	}

	public RestaurantServiceImpl() {

	}

	@Override
	public BookTable bookATable(BookTable obj) throws BookTableInvalidException {
//		validate something
		bookList.add(obj);
		log.info("Customer with id {} booked successfully " + obj.getBookingId());
		return obj;

	}

	@Override
	public BookTable calculateBill(String bookingId) {

		return;
	}

	@Override
	public List<BookTable> viewBookingOnAParticularDate(LocalDate dateRequired) throws BookTableInvalidException {
		// TODO Auto-generated method stub
		List<BookTable> bookTableList = bookList.stream()
				.filter(bookTable -> bookTable.getBookingDate().equals(dateRequired))
				.collect(Collectors.toUnmodifiableList());
		if(bookTableList.isEmpty()) {
			throw new BookTableInvalidException("")
		}
		return null;
	}

	@Override
	public List<String> findStarRatedCustomer() {
		return null;
	}

}
